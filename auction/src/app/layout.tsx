import type { Metadata } from "next";
import { Inter as FontSans } from "next/font/google";
import "./globals.css";
import { cn } from "@/lib/utils";
import { Nav } from "./components/navbar-menu";
import { ThemeProvider } from "@/components/theme-provider";
import { ModeToggle } from "./components/toggle-mode";
import Footer from "./components/footer";
import AppProvider from "./app-provider";
import { cookies } from "next/headers";
import { Toaster } from "@/components/ui/toaster";
import { UserResType } from "@/schemaValidations/user.schema";
import userApiRequest from "@/apiRequests/user";
const fontSans = FontSans({
  subsets: ["latin"],
  variable: "--font-sans",
});
const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const cookieStore = cookies();
  const accessToken = cookieStore.get("accessToken");
  const refreshToken = cookieStore.get("refreshToken");
  let user: UserResType | null = null;

  if (accessToken) {
    const data = await userApiRequest.get(accessToken.value);
    user = data.payload;
  }

  return (
    <html lang="en" suppressHydrationWarning>
      <body
        className={cn(
          "min-h-screen bg-background font-sans antialiased",
          fontSans.variable
        )}
      >
        <ThemeProvider
          attribute="class"
          defaultTheme="system"
          enableSystem
          disableTransitionOnChange
        >
          <AppProvider
            inititalRefreshToken={refreshToken?.value}
            inititalaccessToken={accessToken?.value}
            user={user}
          >
            {user && <Nav user={user} />}
            {children}
            <Toaster />
          </AppProvider>
          <ModeToggle />
        </ThemeProvider>
      </body>
    </html>
  );
}
